---
layout: default.liquid
cover: true
title: pyribs
description: A bare-bones quality diversity optimization library.
tutorials:
  - name: Using CMA-ME to Land a Lunar Lander Like a Space Shuttle
    url: https://docs.pyribs.org/en/latest/tutorials/lunar_lander.html
    img: /imgs/lunar-lander.png
  - name: Learning a Repertoire of Robot Arm Configurations
    url: https://docs.pyribs.org/en/latest/tutorials/arm_repertoire.html
    img: /imgs/arm-repertoire-example.png
  - name: Generating Images to Fool an MNIST Classifier
    url: https://docs.pyribs.org/en/latest/tutorials/fooling_mnist.html
    img: /imgs/fooling-mnist.png
    pixelate: true
---

<div class="__index__">

  <div class="bg-white feature">
    <div class="feature-content">
      <h2>Flexible Components</h2>
      <p>
        Every Quality-Diversity (QD) algorithm in pyribs consists of three
        components.
      </p>
      <div class="lg:flex">
        <div class="component lg:pr-4">
          <div class="shadow">
{% highlight python %}
from ribs.archives import GridArchive

archive = GridArchive(
  dims=[20, 20],
  ranges=[(-1, 1), (-1, 1)],
)
{% endhighlight %}
            <p class="p-3 h-28 bg-gray-100">
              An <a href="https://docs.pyribs.org/en/latest/api/ribs.archives.html">
              <b>Archive</b></a> saves the best representatives generated within
              behavior space.
            </p>
          </div>
        </div>

        <div class="component lg:px-2">
          <div class="shadow">
{% highlight python %}
from ribs.emitters import ImprovementEmitter

emitters = [
  ImprovementEmitter(
    archive,
    x0=[0.0] * 10,
    sigma0=0.1,
  )
]
{% endhighlight %}
            <p class="p-3 h-28 bg-gray-100">
              <a href="https://docs.pyribs.org/en/latest/api/ribs.emitters.html">
              <b>Emitters</b></a> control how new candidate solutions are
              generated and affect if the algorithm prioritizes quality or
              diversity.
            </p>
          </div>
        </div>

        <div class="component lg:pl-4">
          <div class="shadow">
{% highlight python %}
from ribs.optimizers import Optimizer

optimizer = Optimizer(archive, emitters)
{% endhighlight %}
            <p class="p-3 h-28 bg-gray-100">
              An <a href="https://docs.pyribs.org/en/latest/api/ribs.optimizers.html">
              <b>Optimizer</b></a> joins the <b>Archive</b> and <b>Emitters</b>
              together and acts as a scheduling algorithm for emitters.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="bg-gray-100 feature">
    <div class="feature-content md:flex md:items-center md:justify-between">
      <div class="md:w-1/3 md:inline-block md:pr-4">
        <h2>Intuitive Usage</h2>
        <p>
          pyribs components come together in an intuitive ask-tell interface
          inspired by <a href="https://pypi.org/project/cma/">pycma</a>.
        </p>
      </div>
      <div class="md:w-2/3 md:inline-block md:pl-2">
{% highlight python %}
import numpy as np

for itr in range(1000):
    solutions = optimizer.ask()

    # Optimize the 10D negative Sphere function.
    objectives = -np.sum(np.square(solutions), axis=1)

    # BCs: first 2 coordinates of each 10D solution.
    bcs = solutions[:, :2]

    optimizer.tell(objectives, bcs)
{% endhighlight %}
      </div>
    </div>
  </div>

  <div class="bg-white feature">
    <div class="feature-content md:flex md:items-center md:justify-between">
      <div class="md:w-1/2 md:pr-4">
        <h2>Insightful Visualizations</h2>
        <p>
          The pyribs
          <a href="https://docs.pyribs.org/en/latest/api/ribs.visualize.html">
          visualize</a> module integrates with
          <a href="https://matplotlib.org/">Matplotlib</a> to plot a heatmap of the
          archive after each experiment.
        </p>
{% highlight python %}
import matplotlib.pyplot as plt
from ribs.visualize import grid_archive_heatmap

grid_archive_heatmap(archive)
plt.show()
{% endhighlight %}
      </div>
      <div class="md:w-1/2">
        <img class="mx-auto"
             alt="Grid Archive Heatmap for the Sphere function"
             src="{{ 'imgs/sphere-heatmap.png' | url }}" />
      </div>
    </div>
  </div>

  <div class="bg-gray-100 feature">
    <div class="feature-content md:flex md:items-center">
      <div class="md:w-1/3 mb-4 md:pr-8">
        <h2>Easy Installation</h2>
        <p>
          pyribs fully supports Python 3.6-3.8 and is available on
          <a href="https://pypi.org/project/ribs/">PyPI</a>.
        </p>
      </div>
      <div class="md:w-2/3 md:mt-6">
        <p>
          To install the basic distribution of pyribs, run:
        </p>
{% highlight bash %}
pip install ribs
{% endhighlight %}
        <p>
          For the full distribution, which adds the visualize module, run:
        </p>
{% highlight bash %}
pip install ribs[all]
{% endhighlight %}
      </div>
    </div>
  </div>

  <div class="bg-white feature">
    <div class="feature-content">
      <h2>Comprehensive Tutorials</h2>
      <p>
        Learn more about pyribs in the
        <a href="https://docs.pyribs.org/en/latest/tutorials.html">tutorials</a>.
        All tutorials are also available on
        <a href="https://colab.research.google.com/github/icaros-usc/pyribs/blob/master/">
        Google Colab</a>.
      </p>
      <div class="text-center">
      {%- for t in tutorials -%}
        <a class="w-72 block md:inline-block mx-auto md:mx-4 mt-8
                  cursor-pointer shadow"
           href="{{ t.url | url }}">
          <img class="w-full"
               style="{%- if t.pixelate -%}image-rendering: pixelated{%- endif -%}"
               alt="{{ t.name }}" src="{{ t.img | url }}" />
          <p class="bg-gray-100 p-4">
            {{- t.name -}}
          </p>
        </a>
      {%- endfor -%}
      </div>
    </div>
  </div>

</div>
